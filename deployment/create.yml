---
- hosts: server
  vars:
    dir: "/opt/expenses/app"
    db_dir: "/opt/expenses/db"
  pre_tasks:
  - name: Check, if jar file is specified
    fail:
      msg: "Specify the jar file, which should be deployed: --extra-vars 'jar=myapp.jar'"
    when: jar is not defined
  tasks:
  - name: Assure directory does exist
    file:
      path: "{{ dir }}"
      state: directory
  - name: Assure datebase directory does exist
    file:
      path: "{{ db_dir }}"
      state: directory
  - name: Copy jar
    copy:
      src: "{{ jar }}"
      dest: "{{ dir }}"
  - name: Copy configuration
    copy:
      src: "application.properties"
      dest: "{{ dir }}"
  - name: Remove potentially existing application container
    docker:
      name: expenses
      image: java:openjdk-8u102-jre
      state: absent
  - name: Remove potentially existing database container
    docker:
      name: expenses-db
      image: postgres:9.4.9
      state: absent
  - name: Assure database container is running
    docker:
      name: expenses-db
      image: postgres:9.4.9
      restart_policy: always
      state: restarted
      volumes:
      - "{{ db_dir }}:/var/lib/postgresql/data"
      env:
        POSTGRES_USER: expenses
        POSTGRES_PASSWORD: pw
  - name: Assure application container is running
    docker:
      name: expenses
      image: java:openjdk-8u102-jre
      restart_policy: always
      state: restarted
      links:
      - "expenses-db:db"
      command: "java -jar /expenses/{{ jar | basename }} --spring.config.location=file:/expenses/application.properties"
      env:
        VIRTUAL_HOST: "expenses.stritzke.me"
      expose:
      - 80
      volumes:
      - "{{ dir }}:/expenses"